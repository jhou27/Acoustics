 % COMPUTESGRAM  - compute spectrogram%%	usage:  sg = ComputeSgram(s, sRate, Nfreqs, freqsPlot, wSize, shift);%% where%	S		- is a [nSamps x 1] vector of speech samples%	SRATE	- gives the sampling rate in Hz%	NFREQS	- # FFT evaluation points (typically use 256)%   FREQSPLOT - # of frequencies to plot%	WSIZE	- spectral evaluation window in ms %				eg. use  6 ms for broadband, 24 ms for narrow%	SHIFT	- window overlap ( typically use 1 ms)%%	returns [nFFTs x nFrames] spectrogram image SGfunction sg = ComputeSgram(s, sRate, Nfreqs, freqsPlot, wSize, shift);nSamps = length(s);wSize = floor(wSize*sRate/1000);	% window size (samples)wSize = wSize + mod(wSize,2);		% make sure it's evenshift = shift * sRate/1000;			% fractional samples per shiftnFrames = round(nSamps/shift);w = hanning(wSize);sg = zeros(freqsPlot, nFrames);s = [s ; zeros(wSize,1)];           % append zeros at endsx = 1;                             % fractional sample indexfor fi = 1 : nFrames,	si = round(sx);	pf = abs(fft(w .* s(si:si+wSize-1),Nfreqs*2));	sg(:,fi) = pf(2:freqsPlot+1);		% drop DC	sx = sx + shift;end;sg = filter(ones(3,1)/3,1,abs(sg),[],2);	% clean holes